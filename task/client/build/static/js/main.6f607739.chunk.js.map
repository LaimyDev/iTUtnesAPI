{"version":3,"sources":["components/Items.js","components/Header.js","components/Favorite.js","components/Footer.js","components/SearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["Items","props","Container","Row","style","textAlign","className","Col","items","map","item","index","Card","backgroundColor","md","href","collectionViewUrl","target","rel","Image","src","artworkUrl100","alt","trackName","fluid","roundedCircle","artistName","collectionName","wrapperType","margin","Button","variant","size","onClick","addFavorite","Header","Favorite","favorites","kind","removeFavorite","Footer","SearchForm","state","some","alreadyFavorite","trackId","setState","console","log","removeFavorites","filter","handleQueryChange","e","preventDefault","newQuery","value","handleSearch","term","media","newGenre","fetch","then","res","json","results","error","isLoaded","this","lg","InputGroup","onSubmit","handleSubmit","Form","Control","type","name","placeholder","onChange","React","Component","App","integrity","crossorigin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f607739.chunk.js","sourcesContent":["//import components\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n\r\n\r\n//this is the code for displaying the returned data from itunes api\r\n//has buttton to favorite item and add it to list on side\r\nexport default function Items(props){\r\nreturn(//below is container for returned items\r\n    <div>\r\n    <Container> \r\n    <Row>\r\n    <h2 style={{textAlign: \"center\"}}>Items</h2>\r\n    </Row>\r\n    <Row className = \"itemFav\">\r\n    <Col>\r\n    <ul>\r\n    {props.items.map((item, index) => (\r\n        <Card \r\n        className=\"itemCard\"\r\n        style={{backgroundColor: \"#fcbf49\"}}\r\n        >\r\n        <li key={index}>\r\n        <Row>\r\n        <Col md={9}>\r\n        <a \r\n        href={item.collectionViewUrl}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        >\r\n        <Image\r\n        className=\"itemImage img-responsive\"\r\n        src={item.artworkUrl100}\r\n        alt={item.trackName}\r\n        fluid\r\n        roundedCircle\r\n        />\r\n        </a>\r\n        <h5>{item.trackName}</h5>\r\n        <h6>Artist:{item.artistName}</h6>\r\n        <h6>Album:{item.collectionName}</h6>   \r\n        <h6>Type:{item.wrapperType}</h6>\r\n        </Col>\r\n        <Row>\r\n        <Col md={2} style={{margin:\"10px\"}}>\r\n        <Button\r\n        className=\"favButton\"\r\n        variant=\"light\"\r\n        size=\"sm\"\r\n        onClick={() => props.addFavorite(item)}\r\n        >\r\n        My Favorite!\r\n        </Button>\r\n        </Col>\r\n        </Row>\r\n        </Row>\r\n        </li>\r\n        </Card>\r\n    ))}\r\n    </ul>\r\n    </Col>\r\n    </Row>\r\n    </Container>\r\n    </div>\r\n);\r\n}","//import default component\r\nimport React from \"react\";\r\n\r\n//header with name of project\r\nexport default function Header(){\r\n    return(\r\n        <div>\r\n        <h1 className = \"mainHeading\">Welcome to iTunes search directory</h1>\r\n        </div>\r\n    );\r\n}","//import all the components needed \r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Row  from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n\r\n//expport the favorites form\r\n\r\nexport default function Favorite(props){\r\n    return(\r\n        <div>\r\n        <Container> {/*creating a container for the favorited items*/}\r\n        <h2>Favorites</h2>\r\n        <Card style={{backgroundColor:\"#d62828\"}}> \r\n\r\n        <Row> \r\n        <ul>\r\n        {props.favorites.map(item => {\r\n            return(\r\n                <li key={item.index} className=\"favList\">\r\n                <Col>\r\n                <a \r\n                    href={item.collectionViewUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    >\r\n\r\n                    <Image \r\n                    className=\"favImg itemImg img-responsive\"\r\n                    src={item.artworkUrl100}\r\n                    alt={item.trackName}\r\n                    fluid\r\n                    roundedCircle\r\n                    >\r\n                    </Image>\r\n                    </a>\r\n                </Col>\r\n                <Col>\r\n                <h6>{item.trackName}</h6>\r\n                <h6>{item.kind}</h6>\r\n                <Button\r\n                variant=\"danger\"\r\n                size=\"sm\"\r\n                onClick={() => props.removeFavorite(item)}\r\n                >Delete Favorite Item\r\n                </Button>\r\n                </Col>\r\n                </li>\r\n            );\r\n        })}\r\n        </ul>\r\n        </Row>\r\n        </Card>\r\n        </Container>\r\n        </div>\r\n    );\r\n}","//import default component\r\nimport React from \"react\";\r\n\r\n//footer is displayed on bottom of page with my name\r\nexport default function Footer(){\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n        <h6>\r\n        iTunes search app by LaimyDev 2021\r\n        </h6>\r\n        </div>\r\n    );\r\n}","//import components\r\nimport React from \"react\";\r\nimport Items from \"./Items\";\r\nimport Header from \"./Header\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Favorite from \"./Favorite\";\r\nimport Footer from \"./Footer\";\r\n\r\n//the code for setting initial state\r\nexport default class SearchForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            favorites:[],\r\n            items:[],\r\n            newQuery: \"\",\r\n            newGenre: \"\",\r\n            isLoaded: true,\r\n            error: null\r\n        };\r\n    }\r\n\r\n//here is the add to favorite function. doesnt add already aded items\r\n    addFavorite = item => {\r\n        const {favorites} = this.state;\r\n\r\n        if(\r\n            !favorites.some(\r\n                alreadyFavorite => alreadyFavorite.trackId === item.trackId\r\n            )\r\n        ){\r\n            this.setState(\r\n                {\r\n                    favorites: [...this.state.favorites, item]\r\n                },\r\n                () => console.log(favorites)\r\n            );\r\n        }\r\n    };\r\n\r\n//remove one of the items on fav list\r\n    removeFavorites = (item, index) => {\r\n        const { favorites} = this.state;\r\n        console.log(favorites);\r\n        console.log(item);\r\n        this.setState({\r\n            favorites: favorites.filter(favorites => favorites !== item)\r\n        });\r\n    };\r\n\r\n//this function lets user input into info field be changed and allows for setting the newQUery fields state \r\n    handleQueryChange = e => {\r\n        e.preventDefault();\r\n        this.setState(\r\n            {\r\n                newQuery: e.target.value\r\n            },\r\n            () => console.log(this.state.newQuery)\r\n        );\r\n    };\r\n\r\n//this is the search function it gets data from itunes api to show on site\r\n    handleSearch = e => {\r\n\r\n//stops continous resubmission of form\r\n        e.preventDefault();\r\n\r\n        const term = this.state.newQuery;\r\n        const media = this.state.newGenre;\r\n\r\n        if(media){\r\n            console.log(media);\r\n\r\n            fetch(`/search/${term}/${media}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                items => {\r\n                    console.log(items);\r\n                    this.setState(\r\n                        {\r\n                            items: items.items.results\r\n                        },\r\n                        () => console.log(items.items.results)\r\n                    );\r\n                },\r\n//this returns any errors\r\n                error => {\r\n                    this.setState({\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n        }else { \r\n            console.log(media);\r\n\r\n            fetch(`/search/${term}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                items => {\r\n                    console.log(items);\r\n                    this.setState(\r\n                        {\r\n                            items: items.items.results\r\n                        },\r\n                        () => console.log(items.items.results)\r\n                    );\r\n                },\r\n\r\n                error => {\r\n                    this.setState({\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\nrender(){\r\n    if (this.state.error){\r\n        return(\r\n            <div>\r\n            <span>Error: Invalid entry. PLease refresh and try again.</span>\r\n            </div>\r\n        );\r\n    } else { //below is the container for the search, add and rmeove favorites buttons\r\n        return (\r\n            <div>\r\n            <Container>\r\n            <Header></Header>\r\n            <Row>\r\n            <Col lg={true} md={10}>\r\n            <InputGroup size=\"lg\" className=\"mb-3\" onSubmit={this.handleSubmit}>\r\n            <Form.Control\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Search Song, Artist, Movie, eBook, Podcast, Short film or TV show \"\r\n            value={this.state.newQuery}\r\n            onChange={this.handleQueryChange}\r\n            ></Form.Control>\r\n            </InputGroup>\r\n            </Col>\r\n            <Button\r\n            variant=\"outline-info\"\r\n            size=\"sm\"\r\n            type=\"submit\"\r\n            onClick={this.handleSearch}\r\n            >\r\n            Search\r\n            </Button>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Items\r\n            items={this.state.items}\r\n            addFavorite={this.addFavorite}>\r\n            </Items>\r\n            </Col>\r\n            <Col lg={3}>\r\n            <Favorite \r\n            favorites={this.state.favorites}\r\n            removeFavorite={this.removeFavorites}\r\n            ></Favorite>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n            <Footer></Footer>\r\n            </Row>\r\n            </Container>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from \"react\";\nimport './App.css';\nimport SearchForm from \"./components/SearchForm\"\nfunction App() {\n  return ( //below is reactbootstrap imported for its components usage\n    <div style={{backgroundColor: \"#eae2b7\"}}>\n    <link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n  integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n  crossorigin=\"anonymous\"\n/> \n          <SearchForm style={{backgroundColor:\"#eae2b7\"}}></SearchForm>\n    </div>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}